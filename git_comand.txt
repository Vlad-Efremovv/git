$ cat .git/config -> Посмотреть гид конфиг
$ git config --list -> Посмотреть все гид конфиги
$ git config --global user.email va.efremov@kscgroup.ru -> Установить глобальные настройки 
$ git config --global user.name E.V.A. -> Установить глобальные настройки 
$ git config --unset user.name -> Удалить из конфига поле
$ git config --remove-section user -> Удалить конфиг целиком
$ git config --global alias.c config -> Создать алиас для быстрой работы с гит

git status -> состояние git 
git add . -> добавить все не отслеживаемые файлы
git commit  -> сохранить изменения :q выход из редактора
git show -> Просмотр коммита
git reset HEAD <каталог> -> удалит из отслеживания 
git add -f (--forse) <каталог> -> Принудительно добавит файл
git commit -m "fix: 123" .gitignore -> сохранить только в файле .gitignore 
	(-am сохранит и закинет в гит изменения во сех знакомых директориях)

git rm -r <каталог> -> удалит из рабочей директории и из индекса отслеживания
git mw <каталог> <каталог> -> переименовать файл
	
	-r -> Удаление директории
	-f -> Удаление файлов с изменениями которые не были сохранены в репозитории
	--cached -> удаление файла из индекса

git branch -> покажет все ветки (-v покажет инфу о коммите)
git branch feature -> Создать новую ветку git
git checkout feature -> переключится на ветку 
	(git checkout -b feature ) -> Создаст и сразу переключится на новую ветку

git checkout -f HEAD -> Переключится на текущую ветку и удалить все изменения
git stash -> Сохранит измененный файлы во временном хранилище 
git stash pop -> Загрузить файлы из временного хранилища (можно вызывать на разных ветках)

git checkout -b fix -> Создаст новую ветку fix (на основе текущей) с изменениями и переключится на нее (можно переключаться между веткой мамой)
